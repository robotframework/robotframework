name: Unit tests

on:
  push:
    branches:
      - main
      - master
    paths:
      - '.github/workflows/**'
      - 'src/**'
      - 'utest/**'
      - '!**/*.rst'


jobs:
  test_using_builtin_python:

    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest', 'windows-latest' ]
        python-version: [ '2.7', '3.5', '3.6', '3.7', '3.8', '3.9', 'pypy2', 'pypy3' ]
        exclude:
          - os: windows-latest
            python-version: 'pypy2'
          - os: windows-latest
            python-version: 'pypy3'

    runs-on: ${{ matrix.os }}

    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'

      - name: Disable NTP on macOS (https://github.com/actions/virtual-environments/issues/820)
        run: |
          sudo systemsetup -setusingnetworktime off
          sudo rm -rf /etc/ntp.conf
        if: runner.os == 'macOS'

      - name: Run unit tests with coverage
        run: |
          python -m pip install coverage
          python -m pip install -r utest/requirements.txt
          python -m coverage run --branch utest/run.py -v

      - name: Prepare HTML/XML coverage report
        run: |
          python -m coverage xml -i
        if: always()

      - uses: codecov/codecov-action@a1ed4b322b4b38cb846afb5a0ebfa17086917d27
        with:
          name: ${{ matrix.python-version }}-${{ matrix.os }}
        if: always()

  test_using_jython:
    strategy:
      fail-fast: false
      matrix:
        java: [ '8.0' ]
        os: [ 'ubuntu-latest', 'windows-latest', 'macos-latest' ]
        jython-version: [ '2.7.2' ]
        include:
          - os: windows-latest
            set_codepage: chcp 850

    runs-on: ${{ matrix.os }}

    name: Jython (Java ${{ matrix.java }}) ${{ matrix.jython-version }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          architecture: 'x64'
          distribution: 'zulu'

      - name: Install wget
        run: |
          choco install wget -y --no-progress
        if: runner.os == 'Windows'

      - name: Setup Jython ${{ matrix.jython-version }}
        run: |
          wget -nv "http://search.maven.org/remotecontent?filepath=org/python/jython-installer/${{ matrix.jython-version }}/jython-installer-${{ matrix.jython-version }}.jar" -O jytinst.jar
          java -jar jytinst.jar -s -d jython/

      - name: Disable NTP on macOS (https://github.com/actions/virtual-environments/issues/820)
        run: |
          sudo systemsetup -setusingnetworktime off
          sudo rm -rf /etc/ntp.conf
        if: runner.os == 'macOS'

      - name: Run unit tests
        run: |
          ${{ matrix.set_codepage }}
          jython/bin/jython -m pip install -r utest/requirements.txt
          jython/bin/jython utest/run.py -v

  test_using_ironpython:
    strategy:
      fail-fast: false
      matrix:
        os: [ 'windows-latest' ]
        ironpython-version: [ '2.7.9' ]

    runs-on: ${{ matrix.os }}

    name: IronPython ${{ matrix.ironpython-version }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup IronPython ${{ matrix.ironpython-version }}
        run: |
          choco install ironpython -y --no-progress --version ${{ matrix.ironpython-version }}
          ipy -m ensurepip --user

      - name: Run unit tests
        run: |
          chcp 850
          ipy -m pip install -r utest/requirements.txt
          ipy utest/run.py -v
