name: Unit tests

on: [push, pull_request]

jobs:
  test_using_builtin_python:

    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest', 'windows-latest' ]
        python-version: [ '2.7', '3.5', '3.6', '3.7', '3.8', 'pypy2', 'pypy3' ]
        exclude:
          - os: windows-latest
            python-version: 'pypy2'
          - os: windows-latest
            python-version: 'pypy3'

    runs-on: ${{ matrix.os }}

    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'

      - name: Run unit tests with coverage
        run: |
          python -m pip install coverage
          python -m coverage run --branch utest/run.py -v

      - name: Prepare HTML/XML coverage report
        run: |
          python -m coverage html -i -d cov_html
          python -m coverage xml -i
        if: always()

      - uses: codecov/codecov-action@797e92895ec0eac368405352c0add9af878fe257
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: ${{ matrix.python-version }}-${{ matrix.os }}

      - name: Archive coverage results
        uses: actions/upload-artifact@v1
        with:
          name: cov-ut-${{ matrix.python-version }}-${{ matrix.os }}
          path: cov_html
        if: always()

  test_using_jython:
    strategy:
      fail-fast: false
      matrix:
        java: [ '1.8' ]
        os: [ 'ubuntu-latest', 'windows-latest', 'macos-latest' ]
        jython-version: [ '2.7.1' ]
        include:
          - os: windows-latest
            set_codepage: chcp 850

    runs-on: ${{ matrix.os }}

    name: Jython (Java ${{ matrix.java }}) ${{ matrix.jython-version }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          architecture: 'x64'

      - name: Install wget
        run: |
          choco install wget -y --no-progress
        if: runner.os == 'Windows'

      - name: Setup Jython ${{ matrix.jython-version }}
        run: |
          wget -nv "http://search.maven.org/remotecontent?filepath=org/python/jython-installer/${{ matrix.jython-version }}/jython-installer-${{ matrix.jython-version }}.jar" -O jytinst.jar
          java -jar jytinst.jar -s -d jython/

      - name: Run unit tests
        run: |
          ${{ matrix.set_codepage }}
          jython/bin/jython utest/run.py -v
